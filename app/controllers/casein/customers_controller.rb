# Scaffolding generated by Casein v.3.1.11

module Casein
  class CustomersController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Customers'
  		#~ @customers = Customer.paginate :page => params[:page]
      @customers_total_count= Customer.find(:all).length
      @customers = Customer.paginate(:page => params[:page], :per_page=> APP_CONFIG['Pagination']['per_page'], :order => 'created_at DESC') 
    end
  
    def show
      @casein_page_title = 'View customer'
      begin
      @customer = Customer.find params[:id]
      rescue Exception => e
      @error_message = e.message
      end
    end
 
    def new
      @casein_page_title = 'Add a new customer'
    	@customer = Customer.new
    end

    def create
      @customer = Customer.new params[:customer]
    
      if @customer.save
        flash[:notice] = 'Customer created'
        redirect_to casein_customers_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new customer'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update customer'
      
      @customer = Customer.find params[:id]
    
      if @customer.update_attributes params[:customer]
        flash[:notice] = 'Customer has been updated'
        redirect_to casein_customers_path
      else
        flash.now[:warning] = 'There were problems when trying to update this customer'
        render :action => :show
      end
    end
 
    def destroy
      @customer = Customer.find params[:id]

      @customer.destroy
      flash[:notice] = 'Customer has been deleted'
      redirect_to casein_customers_path
    end
  
  end
end