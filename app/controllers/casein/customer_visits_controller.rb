# Scaffolding generated by Casein v.3.1.11

module Casein
  class CustomerVisitsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Customer visits'
  		@customer_visits = CustomerVisit.paginate(:page => params[:page], :per_page=> 10, :order => 'created_at DESC')
    end
  
    def show
      @casein_page_title = 'View customer visit'
      @customer_visit = CustomerVisit.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new customer visit'
    	@customer_visit = CustomerVisit.new
    end

    def create
      @customer_visit = CustomerVisit.new params[:customer_visit]
    
      if @customer_visit.save
        flash[:notice] = 'Customer visit created'
        redirect_to casein_customer_visits_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new customer visit'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update customer visit'
      
      @customer_visit = CustomerVisit.find params[:id]
    
      if @customer_visit.update_attributes params[:customer_visit]
        flash[:notice] = 'Customer visit has been updated'
        redirect_to casein_customer_visits_path
      else
        flash.now[:warning] = 'There were problems when trying to update this customer visit'
        render :action => :show
      end
    end
 
    def destroy
      @customer_visit = CustomerVisit.find params[:id]

      @customer_visit.destroy
      flash[:notice] = 'Customer visit has been deleted'
      redirect_to casein_customer_visits_path
    end
  
  end
end