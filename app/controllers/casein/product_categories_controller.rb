# Scaffolding generated by Casein v.3.1.11

module Casein
  class ProductCategoriesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Product categories'
  		@product_categories = ProductCategory.paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View product category'
      @product_category = ProductCategory.find params[:id]
    end
 
    def new
      @casein_page_title = 'Add a new product category'
    	@product_category = ProductCategory.new
    end

    def create
      @product_category = ProductCategory.new params[:product_category]
    
      if @product_category.save
        flash[:notice] = 'Product category created'
        redirect_to casein_product_categories_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new product category'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update product category'
      
      @product_category = ProductCategory.find params[:id]
    
      if @product_category.update_attributes params[:product_category]
        flash[:notice] = 'Product category has been updated'
        redirect_to casein_product_categories_path
      else
        flash.now[:warning] = 'There were problems when trying to update this product category'
        render :action => :show
      end
    end
 
    def destroy
      @product_category = ProductCategory.find params[:id]

      @product_category.destroy
      flash[:notice] = 'Product category has been deleted'
      redirect_to casein_product_categories_path
    end
  
  end
end